name: src

on:
  push:
    paths:
      - 'src/**'
      - '**.yml'

jobs:
  boot:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Install gcc
        run: |
          wget https://developer.arm.com/-/media/Files/downloads/gnu-rm/10-2020q4/gcc-arm-none-eabi-10-2020-q4-major-x86_64-linux.tar.bz2
          tar -xf gcc-arm-none-eabi-10-2020-q4-major-x86_64-linux.tar.bz2
          echo `pwd`/gcc-arm-none-eabi-10-2020-q4-major/bin >> $GITHUB_PATH

      - name: build boot
        working-directory: src/boot
        run: |
          chmod +x util/install-toolchain.sh
          chmod +x libopencm3/scripts/irq2nvic_h
          chmod +x libopencm3/scripts/lpcvtcksum
          chmod +x libopencm3/scripts/gendoxylist
          chmod +x libopencm3/scripts/genlinktest.sh
          # ./util/install-toolchain.sh
          make -f release.Makefile -k all

      - uses: actions/upload-artifact@v2
        with:
          name: boot
          path: src/boot/

  sboot:
    name: sboot
    env:
      CMSIS: CMSIS_5
    runs-on: ubuntu-latest
    steps:
      - name: ARM GCC setup
        uses: Qful/make-action@master
        with:
          release: 8-2019-q3

      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: build test
        working-directory: src/sboot
        run: |
          make prerequisites
          make stm32f103x8
          make crypter
          make testsuite
          build/cipher_test

      - uses: actions/upload-artifact@v2
        with:
          name: sboot
          path: src/sboot/build

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Install gcc
        run: |
          wget https://developer.arm.com/-/media/Files/downloads/gnu-rm/10-2020q4/gcc-arm-none-eabi-10-2020-q4-major-x86_64-linux.tar.bz2
          tar -xf gcc-arm-none-eabi-10-2020-q4-major-x86_64-linux.tar.bz2
          echo `pwd`/gcc-arm-none-eabi-10-2020-q4-major/bin >> $GITHUB_PATH

      - name: Build src
        working-directory: src/template
        run: |
          make -C blink
          # mkdir build && cd build
          # cmake CROSS_COMPILER_PATH=../gcc-arm-none-eabi-10-2020-q4-major ..

      - uses: actions/upload-artifact@v2
        with:
          name: template
          path: src/template/blink/bin
